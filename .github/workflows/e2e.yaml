name: E2E over minikube

on:
  push:
  pull_request:

jobs:
  e2eTests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ## we could run priviledgeMode this in serie instead of in //
        ## PRO less total time, less expensive CONTRA slower to get results
        priviledgeMode: [ "normal", "unprivileged" ]
        k8sVersion: [ "v1.15.7", "v1.16.7", "v1.17.9", "v1.18.6", "v1.19.2" ]
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2.3.4
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: '^1.14.4'
    - uses: azure/setup-helm@v1
      with:
        version: '2.17.0'
    - name: Setup Helm and Socat
      run: |
        # curl https://get.helm.sh/helm-v2.17.0-linux-amd64.tar.gz --output helm.tar.gz
        # tar -zxvf helm.tar.gz
        sudo apt-get update -y
        sudo apt-get install -y socat
    - name: Setup Minikube
      uses: manusa/actions-setup-minikube@v2.0.1
      with:
        minikube version: 'v1.14.2'
        kubernetes version: '${{ matrix.k8sVersion }}'
    - name: Compile and Build Image
      run: |
        make compile
        eval $(minikube docker-env)
        docker build -t test_image_${{ matrix.priviledgeMode }}:test --build-arg 'MODE=${{ matrix.priviledgeMode }}' .
        docker  run --rm -i test_image_${{ matrix.priviledgeMode }}:test whoami
    - name: Interact with the cluster
      run: |
        if [ "${{ matrix.priviledgeMode }}" = "unprivileged" ]; then
          UNPRIVILEDGE=true
        else
          UNPRIVILEDGE=false
        fi
        go run e2e/cmd/e2e.go --verbose --cluster_name=e2e --nr_license_key="fakeLicense" --rbac=true --integration_image_tag=test --integration_image_repository=test_image_${{ matrix.priviledgeMode }} --k8s_version=${{ matrix.k8sVersion }} --unprivileged=$UNPRIVILEDGE
